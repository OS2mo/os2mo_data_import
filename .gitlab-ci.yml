---
# SPDX-FileCopyrightText: 2022 Magenta ApS
# SPDX-License-Identifier: MPL-2.0

default:
  # All jobs are interruptible by default
  interruptible: true

stages:
  - sync
  - lint
  - test
  - release

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"
  POETRY_VERSION: 1.3.2
  PRECOMMIT_USE_POETRY: "true"

cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .venv/
    - .cache/pip
    - .cache/pre-commit

# Conditions
#############
.if-default-branch-refs: &if-default-branch-refs
  if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

.if-tag: &if-tag
  if: '$CI_COMMIT_TAG'

.if-merge-request: &if-merge-request
  if: '$CI_MERGE_REQUEST_IID'

# Workflow
###########
workflow:
  rules:
    - <<: *if-tag
    - <<: *if-default-branch-refs
    - <<: *if-merge-request

include:
  - project: 'labs/salt-automation'
    file:
      - gitlab-ci-templates/common/no-interrupt.v1.yml
      - gitlab-ci-templates/common/conventional-commits.v1.yml
      - gitlab-ci-templates/common/pre-commit.v1.yml
      - gitlab-ci-templates/common/rules.v1.yml
      - gitlab-ci-templates/python/pypi-cc.v1.yml
      - gitlab-ci-templates/python/pytest-meta.v1.yml

.pytest_extras:
  extends: .pytest
  variables:
    HYPOTHESIS_PROFILE: "ci"
  before_script:
    - !reference [.pytest, before_script]
    - $POETRY_HOME/bin/poetry install -vv

Test on Python 3.11:
  extends: .pytest_extras
  image: python:3.11

Release OS2mo-data-import to PyPI:
  variables:
    PYPI_TOKEN: ${OS2MO_DATA_IMPORT_PYPI_TOKEN}
  extends:
    - .release_to_pypi_cc
  before_script:
    - cd os2mo_data_import/